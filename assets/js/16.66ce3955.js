(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{212:function(e,t,a){"use strict";a.r(t);var n=a(0),i=Object(n.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"sdk-ios"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sdk-ios"}},[e._v("#")]),e._v(" SDK iOS")]),e._v(" "),a("h3",{attrs:{id:"_1-引入集成文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-引入集成文件"}},[e._v("#")]),e._v(" 1. 引入集成文件")]),e._v(" "),a("ul",[a("li",[e._v("将PagSmile.framework文件、index.ios.bundle文件、assets文件和module目录复制到工程 里面，通过Add Files..引入工程，注意assets和index.ios.bundle引入时选择Create folder references")])]),e._v(" "),a("h3",{attrs:{id:"_2-将pods目录中的库加载到工程中，如果使用pod脚本，则需要先把libraries目录复制到工程里面，pod脚本如下："}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-将pods目录中的库加载到工程中，如果使用pod脚本，则需要先把libraries目录复制到工程里面，pod脚本如下："}},[e._v("#")]),e._v(" 2. 将pods目录中的库加载到工程中，如果使用pod脚本，则需要先把libraries目录复制到工程里面，pod脚本如下：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("  pod 'FBLazyVector', :path => \"libraries/react-native/Libraries/FBLazyVector\"\n  pod 'FBReactNativeSpec', :path => \"libraries/react-native/Libraries/FBReactNativeSpec\"\n  pod 'RCTRequired', :path => \"libraries/react-native/Libraries/RCTRequired\"\n  pod 'RCTTypeSafety', :path => \"libraries/react-native/Libraries/TypeSafety\"\n  pod 'React', :path => 'libraries/react-native/'\n  pod 'React-Core', :path => 'libraries/react-native/'\n  pod 'React-CoreModules', :path => 'libraries/react-native/React/CoreModules'\n  pod 'React-Core/DevSupport', :path => 'libraries/react-native/'\n  pod 'React-RCTActionSheet', :path => 'libraries/react-native/Libraries/ActionSheetIOS'\n  pod 'React-RCTAnimation', :path => 'libraries/react-native/Libraries/NativeAnimation'\n  pod 'React-RCTBlob', :path => 'libraries/react-native/Libraries/Blob'\n  pod 'React-RCTImage', :path => 'libraries/react-native/Libraries/Image'\n  pod 'React-RCTLinking', :path => 'libraries/react-native/Libraries/LinkingIOS'\n  pod 'React-RCTNetwork', :path => 'libraries/react-native/Libraries/Network'\n  pod 'React-RCTSettings', :path => 'libraries/react-native/Libraries/Settings'\n  pod 'React-RCTText', :path => 'libraries/react-native/Libraries/Text'\n  pod 'React-RCTVibration', :path => 'libraries/react-native/Libraries/Vibration'\n  pod 'React-Core/RCTWebSocket', :path => 'libraries/react-native/'\n\n  pod 'React-cxxreact', :path => 'libraries/react-native/ReactCommon/cxxreact'\n  pod 'React-jsi', :path => 'libraries/react-native/ReactCommon/jsi'\n  pod 'React-jsiexecutor', :path => 'libraries/react-native/ReactCommon/jsiexecutor'\n  pod 'React-jsinspector', :path => 'libraries/react-native/ReactCommon/jsinspector'\n  pod 'ReactCommon/jscallinvoker', :path => \"libraries/react-native/ReactCommon\"\n  pod 'ReactCommon/turbomodule/core', :path => \"libraries/react-native/ReactCommon\"\n  pod 'Yoga', :path => 'libraries/react-native/ReactCommon/yoga'\n\n  pod 'DoubleConversion', :podspec => 'libraries/react-native/third-party-podspecs/DoubleConversion.podspec'\n  pod 'glog', :podspec => 'libraries/react-native/third-party-podspecs/glog.podspec'\n  pod 'Folly', :podspec => 'libraries/react-native/third-party-podspecs/Folly.podspec'\n\n  pod 'react-native-pdf', :podspec => 'libraries/react-native-pdf/react-native-pdf.podspec'\n  pod 'RNVectorIcons', :podspec => 'libraries/react-native-vector-icons/RNVectorIcons.podspec'\n  pod 'rn-fetch-blob', :podspec => 'libraries/rn-fetch-blob/rn-fetch-blob.podspec'\n  pod 'native-base', :path => 'libraries/native-base/'\n  pod 'RNI18n', :path => 'libraries/react-native-i18n/'\n\n  pod 'FBSDKCoreKit','~> 6.0'\n  pod 'FBSDKShareKit','~> 6.0'\n  pod 'AFNetworking', '~> 4.0'\n  pod 'LiveChat','~>2.0.11'\n")])])]),a("h3",{attrs:{id:"_3-info-plist文件中添加配置："}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-info-plist文件中添加配置："}},[e._v("#")]),e._v(" 3. info.plist文件中添加配置：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("<key>UIAppFonts</key>\n<array>\n  <string>Roboto_medium.ttf</string>\n  <string>Roboto.ttf</string>\n  <string>rubicon-icon-font.ttf</string>\n  <string>Ionicons.ttf</string>\n</array>\n<key>CFBundleURLTypes</key>\n<array>\n  <dict>\n    <key>CFBundleURLSchemes</key>\n    <array>\n      <string>fb572203926949729</string>\n    </array>\n  </dict>\n</array>\n<key>CFBundleVersion</key>\n<string>1</string>\n<key>FacebookAdvertiserIDCollectionEnabled</key>\n<true/>\n<key>FacebookAppID</key>\n<string>572203926949729</string>\n<key>FacebookAutoInitEnabled</key>\n<true/>\n<key>FacebookAutoLogAppEventsEnabled</key>\n<true/>\n<key>FacebookDisplayName</key>\n<string>PagSmile</string>\n<key>LSApplicationQueriesSchemes</key>\n<array>\n  <string>fb-messenger-share-api</string>\n  <string>whatsapp</string>\n  <string>fbapi</string>\n  <string>fbauth2</string>\n  <string>fbshareextension</string>\n</array>\n")])])]),a("h3",{attrs:{id:"_4-appdelegate-m中添加："}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-appdelegate-m中添加："}},[e._v("#")]),e._v(" 4. AppDelegate.m中添加：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('#import <FBSDKCoreKit/FBSDKCoreKit.h>\n@import LiveChat;\n\n@interface AppDelegate () <LiveChatDelegate>\n...\n- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions\n{\n\n  [[FBSDKApplicationDelegate sharedInstance] application:application\n                           didFinishLaunchingWithOptions:launchOptions];\n\n  LiveChat.delegate = self;\n\n  return YES;\n}\n\n- (BOOL)application:(UIApplication *)application\n            openURL:(NSURL *)url\n            options:(NSDictionary<UIApplicationOpenURLOptionsKey,id> *)options {\n\n  BOOL handled = [[FBSDKApplicationDelegate sharedInstance] application:application\n                                                                openURL:url\n                                                      sourceApplication:options[UIApplicationOpenURLOptionsSourceApplicationKey]\n                                                             annotation:options[UIApplicationOpenURLOptionsAnnotationKey]\n                  ];\n  // Add any custom logic here.\n  return handled;\n}\n\n#pragma mark - LiveChatDelegate\n\n- (void)receivedWithMessage:(LiveChatMessage *)message {\n    if (!LiveChat.isChatPresented) {\n        // Notifying user\n        UIAlertController *alert = [UIAlertController alertControllerWithTitle:@"Support" message:message.text preferredStyle:UIAlertControllerStyleAlert];\n        UIAlertAction *chatAction = [UIAlertAction actionWithTitle:@"Go to Chat" style:UIAlertActionStyleDefault handler:^(UIAlertAction * _Nonnull action) {\n            // Presenting chat if not presented:\n            if (!LiveChat.isChatPresented) {\n                [LiveChat presentChatWithAnimated:YES completion:nil];\n            }\n        }];\n        [alert addAction:chatAction];\n\n        UIAlertAction *cancelAction = [UIAlertAction actionWithTitle:@"Cancel" style:UIAlertActionStyleCancel handler:nil];\n        [alert addAction:cancelAction];\n\n        [self.window.rootViewController presentViewController:alert animated:YES completion:nil];\n    }\n}\n\n- (void)handleWithURL:(NSURL *)URL {\n    [[UIApplication sharedApplication] openURL:URL];\n}\n')])])]),a("h3",{attrs:{id:"_5-初始化sdk"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-初始化sdk"}},[e._v("#")]),e._v(" 5. 初始化SDK")]),e._v(" "),a("p",[e._v("拿到Pagsmile后台返回的prepay_id后调用")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("[PagSmile init:app_id withApiKey:api_key withPattern:TEST];\n")])])]),a("h3",{attrs:{id:"_6-拉起订单页面"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-拉起订单页面"}},[e._v("#")]),e._v(" 6. 拉起订单页面")]),e._v(" "),a("p",[e._v("拿到Pagsmile后台返回的prepay_id后调用")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("[PagSmile order:prepayId ];\n")])])])])}),[],!1,null,null,null);t.default=i.exports}}]);