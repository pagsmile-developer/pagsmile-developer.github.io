(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{223:function(e,t,a){"use strict";a.r(t);var i=a(0),n=Object(i.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"sdk-ios"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sdk-ios"}},[e._v("#")]),e._v(" SDK iOS")]),e._v(" "),a("h3",{attrs:{id:"_1-introduce-integration-files"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-introduce-integration-files"}},[e._v("#")]),e._v(" 1. Introduce integration files")]),e._v(" "),a("p",[e._v("Copy PagSmile.framework file, index.ios.bundle file, assets file and module directory into the project, import the project through Add Files.., pay attention to select Create folder references when importing assets and index.ios.bundle.")]),e._v(" "),a("h3",{attrs:{id:"_2-load-third-party-libraries"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-load-third-party-libraries"}},[e._v("#")]),e._v(" 2. Load third-party libraries")]),e._v(" "),a("p",[e._v("Load the library in the pods directory into the project. If you use a pod script, you need to copy the libraries directory to the project first. The pod script is as follows:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("  pod 'FBLazyVector', :path => \"libraries/react-native/Libraries/FBLazyVector\"\n  pod 'FBReactNativeSpec', :path => \"libraries/react-native/Libraries/FBReactNativeSpec\"\n  pod 'RCTRequired', :path => \"libraries/react-native/Libraries/RCTRequired\"\n  pod 'RCTTypeSafety', :path => \"libraries/react-native/Libraries/TypeSafety\"\n  pod 'React', :path => 'libraries/react-native/'\n  pod 'React-Core', :path => 'libraries/react-native/'\n  pod 'React-CoreModules', :path => 'libraries/react-native/React/CoreModules'\n  pod 'React-Core/DevSupport', :path => 'libraries/react-native/'\n  pod 'React-RCTActionSheet', :path => 'libraries/react-native/Libraries/ActionSheetIOS'\n  pod 'React-RCTAnimation', :path => 'libraries/react-native/Libraries/NativeAnimation'\n  pod 'React-RCTBlob', :path => 'libraries/react-native/Libraries/Blob'\n  pod 'React-RCTImage', :path => 'libraries/react-native/Libraries/Image'\n  pod 'React-RCTLinking', :path => 'libraries/react-native/Libraries/LinkingIOS'\n  pod 'React-RCTNetwork', :path => 'libraries/react-native/Libraries/Network'\n  pod 'React-RCTSettings', :path => 'libraries/react-native/Libraries/Settings'\n  pod 'React-RCTText', :path => 'libraries/react-native/Libraries/Text'\n  pod 'React-RCTVibration', :path => 'libraries/react-native/Libraries/Vibration'\n  pod 'React-Core/RCTWebSocket', :path => 'libraries/react-native/'\n\n  pod 'React-cxxreact', :path => 'libraries/react-native/ReactCommon/cxxreact'\n  pod 'React-jsi', :path => 'libraries/react-native/ReactCommon/jsi'\n  pod 'React-jsiexecutor', :path => 'libraries/react-native/ReactCommon/jsiexecutor'\n  pod 'React-jsinspector', :path => 'libraries/react-native/ReactCommon/jsinspector'\n  pod 'ReactCommon/jscallinvoker', :path => \"libraries/react-native/ReactCommon\"\n  pod 'ReactCommon/turbomodule/core', :path => \"libraries/react-native/ReactCommon\"\n  pod 'Yoga', :path => 'libraries/react-native/ReactCommon/yoga'\n\n  pod 'DoubleConversion', :podspec => 'libraries/react-native/third-party-podspecs/DoubleConversion.podspec'\n  pod 'glog', :podspec => 'libraries/react-native/third-party-podspecs/glog.podspec'\n  pod 'Folly', :podspec => 'libraries/react-native/third-party-podspecs/Folly.podspec'\n\n  pod 'react-native-pdf', :podspec => 'libraries/react-native-pdf/react-native-pdf.podspec'\n  pod 'RNVectorIcons', :podspec => 'libraries/react-native-vector-icons/RNVectorIcons.podspec'\n  pod 'rn-fetch-blob', :podspec => 'libraries/rn-fetch-blob/rn-fetch-blob.podspec'\n  pod 'native-base', :path => 'libraries/native-base/'\n  pod 'RNI18n', :path => 'libraries/react-native-i18n/'\n\n  pod 'FBSDKCoreKit','~> 6.0'\n  pod 'FBSDKShareKit','~> 6.0'\n  pod 'AFNetworking', '~> 4.0'\n  pod 'LiveChat','~>2.0.11'\n")])])]),a("h3",{attrs:{id:"_3-add-configuration-to-the-info-plist-file"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-add-configuration-to-the-info-plist-file"}},[e._v("#")]),e._v(" 3. Add configuration to the info.plist file")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("<key>UIAppFonts</key>\n<array>\n  <string>Roboto_medium.ttf</string>\n  <string>Roboto.ttf</string>\n  <string>rubicon-icon-font.ttf</string>\n  <string>Ionicons.ttf</string>\n</array>\n<key>CFBundleURLTypes</key>\n<array>\n  <dict>\n    <key>CFBundleURLSchemes</key>\n    <array>\n      <string>fb572203926949729</string>\n    </array>\n  </dict>\n</array>\n<key>CFBundleVersion</key>\n<string>1</string>\n<key>FacebookAdvertiserIDCollectionEnabled</key>\n<true/>\n<key>FacebookAppID</key>\n<string>572203926949729</string>\n<key>FacebookAutoInitEnabled</key>\n<true/>\n<key>FacebookAutoLogAppEventsEnabled</key>\n<true/>\n<key>FacebookDisplayName</key>\n<string>PagSmile</string>\n<key>LSApplicationQueriesSchemes</key>\n<array>\n  <string>fb-messenger-share-api</string>\n  <string>whatsapp</string>\n  <string>fbapi</string>\n  <string>fbauth2</string>\n  <string>fbshareextension</string>\n</array>\n")])])]),a("h3",{attrs:{id:"_4-add-in-appdelegate-m"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-add-in-appdelegate-m"}},[e._v("#")]),e._v(" 4. Add in AppDelegate.m")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('#import <FBSDKCoreKit/FBSDKCoreKit.h>\n@import LiveChat;\n\n@interface AppDelegate () <LiveChatDelegate>\n...\n- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions\n{\n\n  [[FBSDKApplicationDelegate sharedInstance] application:application\n                           didFinishLaunchingWithOptions:launchOptions];\n\n  LiveChat.delegate = self;\n\n  return YES;\n}\n\n- (BOOL)application:(UIApplication *)application\n            openURL:(NSURL *)url\n            options:(NSDictionary<UIApplicationOpenURLOptionsKey,id> *)options {\n\n  BOOL handled = [[FBSDKApplicationDelegate sharedInstance] application:application\n                                                                openURL:url\n                                                      sourceApplication:options[UIApplicationOpenURLOptionsSourceApplicationKey]\n                                                             annotation:options[UIApplicationOpenURLOptionsAnnotationKey]\n                  ];\n  // Add any custom logic here.\n  return handled;\n}\n\n#pragma mark - LiveChatDelegate\n\n- (void)receivedWithMessage:(LiveChatMessage *)message {\n    if (!LiveChat.isChatPresented) {\n        // Notifying user\n        UIAlertController *alert = [UIAlertController alertControllerWithTitle:@"Support" message:message.text preferredStyle:UIAlertControllerStyleAlert];\n        UIAlertAction *chatAction = [UIAlertAction actionWithTitle:@"Go to Chat" style:UIAlertActionStyleDefault handler:^(UIAlertAction * _Nonnull action) {\n            // Presenting chat if not presented:\n            if (!LiveChat.isChatPresented) {\n                [LiveChat presentChatWithAnimated:YES completion:nil];\n            }\n        }];\n        [alert addAction:chatAction];\n\n        UIAlertAction *cancelAction = [UIAlertAction actionWithTitle:@"Cancel" style:UIAlertActionStyleCancel handler:nil];\n        [alert addAction:cancelAction];\n\n        [self.window.rootViewController presentViewController:alert animated:YES completion:nil];\n    }\n}\n\n- (void)handleWithURL:(NSURL *)URL {\n    [[UIApplication sharedApplication] openURL:URL];\n}\n')])])]),a("h3",{attrs:{id:"_5-initialization-sdk"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-initialization-sdk"}},[e._v("#")]),e._v(" 5. Initialization SDK")]),e._v(" "),a("p",[e._v("Call it after getting the prepay_id returned by pagsmile background")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("[PagSmile init:app_id withApiKey:api_key withPattern:TEST];\n")])])]),a("h3",{attrs:{id:"_6-pull-up-the-order-page"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-pull-up-the-order-page"}},[e._v("#")]),e._v(" 6. Pull Up the Order Page")]),e._v(" "),a("p",[e._v("Call it after getting the prepay_id returned by pagsmile background")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("[PagSmile order:prepayId ];\n")])])])])}),[],!1,null,null,null);t.default=n.exports}}]);